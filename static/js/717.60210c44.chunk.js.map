{"version":3,"file":"static/js/717.60210c44.chunk.js","mappings":"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","sources":["webpack://react-app-01/./src/components/Users/Users.module.css?b9d0","components/Users/Paginators/PaginatorWithArrows.jsx","components/Users/Users.jsx","redux/selectors/userSelectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Users_avatar__YVbUt\",\"activeTab\":\"Users_activeTab__YjPo5\",\"tab\":\"Users_tab__38yuL\",\"cell\":\"Users_cell__VPZ0j\",\"activeCell\":\"Users_activeCell__tPd3y\",\"arrowBtn\":\"Users_arrowBtn__iXA1n\",\"left\":\"Users_left__ewX4F\"};","import React from \"react\";\r\nimport s from \"../Users.module.css\";\r\n\r\nimport leftArrow from \"./images/icons8-налево-96.png\"\r\nimport rightArrow from \"./images/icons8-направо-96.png\"\r\nimport doubleLeftArrow from \"./images/icons8-двойная-стрелка-влево-96.png\"\r\nimport doubleRightArrow from \"./images/icons8-двойная-стрелка-вправо-96.png\"\r\n\r\nconst PaginatorWithArrows = ({pages, currentPage, updateCurrentPage}) => {\r\n\r\n    let curP = currentPage\r\n    let curPF = ((curP - 5) < 0) ? 0 : ((curP + 5) > pages.length) ? pages.length - 10 : curP - 5 //4323 - 5 = 4318\r\n    let curPL = ((curP - 5) < 0) ? 10 : ((curP + 5) > pages.length) ? pages.length : curP + 5 //4323 + 5 = 4328\r\n    let slicedPages = pages.slice(curPF, curPL)\r\n\r\n    return(\r\n        <div>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === 1} onClick={() => updateCurrentPage(1)}>{`<<`}</button></span>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === 1} onClick={() => updateCurrentPage(curP - 1)}>{`<`}</button></span>\r\n            {slicedPages.map(p => {\r\n                return(\r\n                    <span onClick={() => updateCurrentPage(p)}\r\n                          className={`${s.tab}`}>\r\n                    {<span className={`${s.cell} ${currentPage === p && s.activeTab} `}>{p}</span>}\r\n                </span>\r\n                )\r\n            })}\r\n            <span><button className={s.arrowBtn} disabled={currentPage === pages.length} onClick={() => updateCurrentPage(curP + 1)}>{`>`}</button></span>\r\n            <span><button className={s.arrowBtn} disabled={currentPage === pages.length} onClick={() => updateCurrentPage(pages.length)}>{`>>`}</button></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginatorWithArrows","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport noAvatar from \"../../assets/images/noavatar.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginators/Paginator\";\r\nimport PaginatorWithArrows from \"./Paginators/PaginatorWithArrows\";\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (<div>\r\n        <PaginatorWithArrows pages={pages}\r\n                   currentPage={props.currentPage}\r\n                   updateCurrentPage={props.updateCurrentPage}/>\r\n        {props.usersData.map(el => <span>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + el.id}>\r\n                            <img\r\n                                className={s.avatar}\r\n                                src={el.photos.small != null ? el.photos.small : noAvatar}\r\n                                alt=\"img\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {el.followed ?\r\n                                <button disabled={props.followingElements.some(id => id === el.id)} onClick={() => {\r\n\r\n                                    props.unfollowUser(el.id)\r\n\r\n                                    // props.setFollowingInProgress(true, el.id)\r\n                                    // axiosUnfollow(el.id).then(data => {\r\n                                    //     if(data.resultCode === 0)\r\n                                    //         props.setUnfollow(el.id)\r\n                                    //     props.setFollowingInProgress(false, el.id)\r\n                                    // })\r\n                                }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingElements.some(id => id === el.id)} onClick={() => {\r\n\r\n                                    props.followUser(el.id)\r\n\r\n                                    // props.setFollowingInProgress(true, el.id)\r\n                                    // axiosFollow(el.id).then(data => {\r\n                                    //     if(data.resultCode === 0)\r\n                                    //         props.setFollow(el.id)\r\n                                    //     props.setFollowingInProgress(false, el.id)\r\n                                    // })\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{el.name}</div>\r\n                            <div>{el.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"el.location.city\"}</div><div>{\"el.location.country\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </span>)\r\n        }\r\n        {/*<div>*/}\r\n        {/*    <button onClick={props.loadMoreUsers}>Load More</button>*/}\r\n        {/*</div>*/}\r\n        <br/>\r\n        <button onClick={props.getFriends}>Get friends</button>\r\n        <div>\r\n            {props.friendsData.map(el => <span>{el.id + \" \"}</span>)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersPage = (state) => {\r\n    return state.usersPage\r\n}\r\n\r\nexport const getSelectorUserPage = createSelector(getUsersPage, (usersPage)=>{\r\n\r\n    return usersPage\r\n})","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    followedActionCreator, followUserThunkCreator, getUsersThunkCreator,\r\n    setCurrentPageActionCreator, setFollowingInProgressActionCreator, setFriendsActionCreator,\r\n    setUsersActionCreator, setUsersTotalCountActionCreator, toggleFetchingActionCreator,\r\n    unfollowedActionCreator, unfollowUserThunkCreator\r\n} from \"../../redux/usersReducer\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {axiosGetFriends, axiosGetUsers} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {getSelectorUserPage, getUsersPage} from \"../../redux/selectors/userSelectors\";\r\n\r\n// const USERS_API_URL = \"https://social-network.samuraijs.com/api/1.0/users\"\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.usersPage.pageSize, this.props.usersPage.currentPage)\r\n\r\n        // this.props.toggleFetching(true)\r\n        //\r\n        //\r\n        // axiosGetUsers(this.props.usersPage.pageSize, this.props.usersPage.currentPage).then(data => {\r\n        //     this.props.toggleFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setUsersTotalCount(data.totalCount)\r\n        // })\r\n\r\n        // axios.get(USERS_API_URL + `?count=${this.props.usersPage.pageSize}&page=${this.props.usersPage.currentPage}`, {\r\n        //     withCredentials: true\r\n        // }).then(response => {\r\n        //     this.props.toggleFetching(false)\r\n        //     this.props.setUsers(response.data.items)\r\n        //     this.props.setUsersTotalCount(response.data.totalCount)\r\n        // })\r\n    }\r\n\r\n    loadUserPage = (number) => {\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\" + number).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n    loadMoreUsers = () => {\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\" + this.props.usersPage.currentPage).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n    updateCurrentPage = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.getUsers(this.props.usersPage.pageSize, pageNumber)\r\n\r\n        // this.props.toggleFetching(true)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // axiosGetUsers(this.props.usersPage.pageSize, pageNumber).then(response => {\r\n        //     this.props.toggleFetching(false)\r\n        //     this.props.setUsers(response.items)\r\n        // })\r\n\r\n    }\r\n\r\n    getFriends = () => {\r\n        axiosGetFriends().then(response => {\r\n            this.props.setFriends(response.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <>\r\n            {this.props.usersPage.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.usersPage.totalUsersCount}\r\n                   pageSize={this.props.usersPage.pageSize}\r\n                   currentPage={this.props.usersPage.currentPage}\r\n                   updateCurrentPage={this.updateCurrentPage}\r\n                   usersData={this.props.usersPage.usersData}\r\n                   setUnfollow={this.props.setUnfollow}\r\n                   setFollow={this.props.setFollow}\r\n                   friendsData={this.props.usersPage.friendsData}\r\n                   getFriends={this.getFriends}\r\n                   setFollowingInProgress={this.props.setFollowingInProgress}\r\n                   followingElements={this.props.usersPage.followingElements}\r\n                   getUsers={this.props.getUsers}\r\n                   followUser={this.props.followUser}\r\n                   unfollowUser={this.props.unfollowUser}\r\n\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersPage: getUsersPage(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setFollow: (userId) => {\r\n            dispatch(followedActionCreator(userId))\r\n        },\r\n        setUnfollow: (userId) => {\r\n            dispatch(unfollowedActionCreator(userId))\r\n        },\r\n        setUsers: (usersData) => {\r\n            dispatch(setUsersActionCreator(usersData))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageActionCreator(currentPage))\r\n        },\r\n        setUsersTotalCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountActionCreator(totalCount))\r\n        },\r\n        toggleFetching: (isFetching) => {\r\n            dispatch(toggleFetchingActionCreator(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nconst UserContainer = connect(mapStateToProps,\r\n    {\r\n        setFollow: followedActionCreator,\r\n        setUnfollow: unfollowedActionCreator,\r\n        setUsers: setUsersActionCreator,\r\n        setUsersTotalCount: setUsersTotalCountActionCreator,\r\n        setCurrentPage: setCurrentPageActionCreator,\r\n        toggleFetching: toggleFetchingActionCreator,\r\n        setFriends: setFriendsActionCreator,\r\n        setFollowingInProgress: setFollowingInProgressActionCreator,\r\n        getUsers: getUsersThunkCreator,\r\n        followUser: followUserThunkCreator,\r\n        unfollowUser: unfollowUserThunkCreator\r\n    })(withAuthRedirect(UsersAPIContainer))\r\n\r\nexport default UserContainer"],"names":["pages","currentPage","updateCurrentPage","curP","curPF","length","curPL","slicedPages","slice","className","s","disabled","onClick","map","p","props","pagesCount","Math","ceil","totalUsersCount","pageSize","i","push","usersData","el","to","id","src","photos","small","noAvatar","alt","followed","followingElements","some","unfollowUser","followUser","name","status","getFriends","friendsData","getUsersPage","state","usersPage","UsersAPIContainer","createSelector","loadUserPage","number","axios","then","response","setUsers","data","items","loadMoreUsers","pageNumber","setCurrentPage","getUsers","axiosGetFriends","setFriends","this","isFetching","Preloader","setUnfollow","setFollow","setFollowingInProgress","React","connect","followedActionCreator","unfollowedActionCreator","setUsersActionCreator","setUsersTotalCount","setUsersTotalCountActionCreator","setCurrentPageActionCreator","toggleFetching","toggleFetchingActionCreator","setFriendsActionCreator","setFollowingInProgressActionCreator","getUsersThunkCreator","followUserThunkCreator","unfollowUserThunkCreator","withAuthRedirect"],"sourceRoot":""}